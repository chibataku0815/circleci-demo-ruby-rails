version: 2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.4.1-node
        environment:
        - PG_HOST=localhost
        - PG_USER=ubuntu
        - RAILS_ENV=test
        - RACK_ENV=test
      - image: postgres:9.5
        environment:
        - POSTGRES_USER=ubuntu
        - POSTGRES_DB=myapp_test
    working_directory: ~/myapp

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Rubocop Check
      - run:
          name: RuboCop Style Check
          command: bundle exec rubocop

      # Haml Check
      - run:
          name: Haml-Linter Style Check
          command: bundle exec haml-lint app/views/

      # SCSS Check
      - run:
          name: SCSS-Linter Style Check
          command: bundle exec scss-lint app/assets/

      # Database setup
      - run:
          name: Database setup
          command: |
            bundle exec rake db:create db:schema:load --trace
            bundle exec rake db:migrate
          environment:
            DATABASE_URL: "postgres://ubuntu@localhost:5432/myapp_test"

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
            bundle exec rspec --format progress \
                            --format RspecJunitFormatter \
                            --out /tmp/test-results/rspec.xml \
                            --format progress \
                            "${TEST_FILES}"
          environment:
            DATABASE_URL: "postgres://ubuntu@localhost:5432/myapp_test"

      # Save test results for timing analysis
      - store_test_results:
          path: test_results
